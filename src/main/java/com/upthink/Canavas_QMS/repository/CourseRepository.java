package com.upthink.Canavas_QMS.repository;import com.upthink.Canavas_QMS.model.Course;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.data.jpa.repository.Modifying;import org.springframework.data.jpa.repository.Query;import org.springframework.data.repository.query.Param;import org.springframework.stereotype.Repository;import org.springframework.transaction.annotation.Transactional;import java.sql.Timestamp;import java.util.List;import java.util.Optional;@Repositorypublic interface CourseRepository extends JpaRepository<Course, Integer> {    // Custom SQL Queries (excluding soft-deleted records)    @Query("SELECT c FROM Course c WHERE c.deletedAt IS NULL")    List<Course> findAllCourses();    @Query("SELECT c FROM Course c WHERE c.id = :id AND c.deletedAt IS NULL")    Optional<Course> findCourseById(Integer id);    @Modifying    @Transactional    @Query("UPDATE Course c SET c.deletedAt = :deletedAt WHERE c.id = :id")    void softDeleteCourseById(Integer id, Timestamp deletedAt);    @Modifying    @Transactional    @Query("UPDATE Course c SET c.name = :name, c.sla = :sla WHERE c.id = :id")    void updateCourse(@Param("id") int id, @Param("name") String name, @Param("sla") long sla);}