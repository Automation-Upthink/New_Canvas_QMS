package com.upthink.qms.controller;import com.upthink.qms.model.EssayDetails;import com.upthink.qms.service.EssayDetailsService;import org.springframework.http.ResponseEntity;import org.springframework.security.access.prepost.PreAuthorize;import org.springframework.web.bind.annotation.*;import java.util.List;import java.util.Optional;@RestController@RequestMapping("/api/essay-details")public class EssayDetailsController {    private final EssayDetailsService essayDetailsService;    public EssayDetailsController(EssayDetailsService essayDetailsService) {        this.essayDetailsService = essayDetailsService;    }    @GetMapping    @PreAuthorize("hasAnyRole('QM_ADMIN', 'SME', 'USER')")    public ResponseEntity<List<EssayDetails>> getAllEssayDetails(@RequestParam String tokenValidationId) {        List<EssayDetails> essayDetails = essayDetailsService.getAllEssayDetails();        return ResponseEntity.ok(essayDetails);    }    @GetMapping("/{id}")    @PreAuthorize("hasAnyRole('QM_ADMIN', 'SME', 'USER')")    public ResponseEntity<EssayDetails> getEssayDetailsById(@PathVariable int id, @RequestParam String tokenValidationId) {        Optional<EssayDetails> essayDetails = essayDetailsService.getEssayDetailsById(id);        return essayDetails.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());    }//    @PostMapping//    @PreAuthorize("hasRole('QM_ADMIN')")//    public ResponseEntity<String> createEssayDetails(@RequestBody CreateEssayDetailsRequest request) {//        essayDetailsService.saveEssayDetails(request.getData());//        return ResponseEntity.ok("EssayDetails created successfully");//    }////    @PutMapping("/{id}")//    @PreAuthorize("hasRole('QM_ADMIN')")//    public ResponseEntity<String> updateEssayDetails(@PathVariable int id, @RequestBody UpdateEssayDetailsRequest request) {//        Optional<EssayDetails> existingEssayDetails = essayDetailsService.getEssayDetailsById(id);//        if (existingEssayDetails.isPresent()) {//            EssayDetails essayDetails = request.getData();//            essayDetails.setId(id);//            essayDetailsService.saveEssayDetails(essayDetails);//            return ResponseEntity.ok("EssayDetails updated successfully");//        } else {//            return ResponseEntity.notFound().build();//        }//    }////    @DeleteMapping("/{id}")//    @PreAuthorize("hasRole('QM_ADMIN')")//    public ResponseEntity<String> deleteEssayDetails(@PathVariable int id, @RequestBody DeleteEssayDetailsRequest request) {//        Optional<EssayDetails> existingEssayDetails = essayDetailsService.getEssayDetailsById(id);//        if (existingEssayDetails.isPresent()) {//            EssayDetails essayDetails = existingEssayDetails.get();//            essayDetails.setDeletedAt(new Timestamp(System.currentTimeMillis())); // Soft delete by updating deletedAt//            essayDetailsService.saveEssayDetails(essayDetails);//            return ResponseEntity.ok("EssayDetails soft deleted successfully");//        } else {//            return ResponseEntity.notFound().build();//        }//    }}