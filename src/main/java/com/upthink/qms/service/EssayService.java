package com.upthink.qms.service;import com.upthink.qms.dto.request.CanvasEssaysDTO;import com.upthink.qms.model.Essay;import com.upthink.qms.repository.EssayRepository;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;import java.util.Optional;import java.util.stream.Collectors;@Servicepublic class EssayService {    private final EssayRepository essayRepository;    public EssayService(EssayRepository essayRepository) {        this.essayRepository = essayRepository;    }    public List<Essay> getAllEssays() {        return essayRepository.findAllEssays();    }    public Optional<Essay> getEssayById(int id) {        return essayRepository.findEssayById(id);    }////    @Transactional//    public void saveEssay(Essay essay) {//        essayRepository.insertEssay(//                essay.getEssayId(),//                essay.getName(),//                essay.getSubmissionId(),//                essay.getAssignmentId(),//                essay.getUserId(),//                essay.getUngradedFileLink(),//                essay.getStatus(),//                essay.getGradeTime(),//                essay.getFetchedFor(),//                essay.getGradedFileLink(),//                essay.getCreatedAt(),//                essay.getUpdatedAt(),//                essay.getExpiresAt(),//                essay.getDeletedAt(),//                essay.getFinalGrade(),//                essay.getGradeOutOf(),//                essay.getRubric(),//                essay.getComments(),//                essay.getToPush(),//                essay.getPushStatus()//        );//    }//    @Transactional//    public void deleteEssay(int id) {//        essayRepository.deleteEssayById(id);//    }    @Transactional(rollbackFor = Exception.class)    public void addEssayFromCanvasService(List<CanvasEssaysDTO.CanvasEssayDTO> canvasEssaysDTOList) {        try {            List<Essay> essayList = canvasEssaysDTOList.stream()                    .map(essay -> {                        return new Essay(                                essay.getEssayId(),                                essay.getName(),                                essay.getAssignmentId(),                                essay.getSubmissionId(),                                essay.getUserId(),                                essay.getUngradedFileLink()                        );                    }).collect(Collectors.toList());            essayRepository.saveAll(essayList);        } catch (Exception e) {            System.out.println("Error: " + e);        }    }//    public EssayResponse listEssaysForSMEView(List<String> essayStatusList, int clientId) {//        List<Essay> essayList;//        if (clientId == 0) {//            essayList = essayRepository.listEssaysByStatus(essayStatusList)////        }//    }}